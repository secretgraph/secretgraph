"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
exports.updateClusterMutation = exports.createClusterMutation = exports.getClusterQuery = exports.getClusterConfigurationQuery = exports.clusterFeedQuery = void 0;
var client_1 = require("@apollo/client");
exports.clusterFeedQuery = client_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    query clusterFeedQuery(\n        $authorization: [String!]\n        $include: [String!]\n        $exclude: [String!]\n        $deleted: Boolean\n        $public: Boolean\n        $count: Int\n        $cursor: String\n    ) {\n        clusters: secretgraph(authorization: $authorization) {\n            clusters(\n                includeTags: $include\n                excludeTags: $exclude\n                deleted: $deleted\n                public: $public\n                first: $count\n                after: $cursor\n            )\n                @connection(\n                    key: \"feedClusters\"\n                    filter: [\n                        \"authorization\"\n                        \"includeTags\"\n                        \"excludeTags\"\n                        \"public\"\n                        \"deleted\"\n                    ]\n                ) {\n                edges {\n                    node {\n                        deleted\n                        updateId\n                        link\n                        id\n                        description\n                        availableActions {\n                            type\n                        }\n                    }\n                }\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n            }\n        }\n    }\n"], ["\n    query clusterFeedQuery(\n        $authorization: [String!]\n        $include: [String!]\n        $exclude: [String!]\n        $deleted: Boolean\n        $public: Boolean\n        $count: Int\n        $cursor: String\n    ) {\n        clusters: secretgraph(authorization: $authorization) {\n            clusters(\n                includeTags: $include\n                excludeTags: $exclude\n                deleted: $deleted\n                public: $public\n                first: $count\n                after: $cursor\n            )\n                @connection(\n                    key: \"feedClusters\"\n                    filter: [\n                        \"authorization\"\n                        \"includeTags\"\n                        \"excludeTags\"\n                        \"public\"\n                        \"deleted\"\n                    ]\n                ) {\n                edges {\n                    node {\n                        deleted\n                        updateId\n                        link\n                        id\n                        description\n                        availableActions {\n                            type\n                        }\n                    }\n                }\n                pageInfo {\n                    hasNextPage\n                    endCursor\n                }\n            }\n        }\n    }\n"])));
exports.getClusterConfigurationQuery = client_1.gql(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    query clusterGetConfigurationQuery($id: ID!, $authorization: [String!]) {\n        secretgraph(authorization: $authorization) {\n            config {\n                id\n                hashAlgorithms\n                registerUrl\n                injectedClusters {\n                    group\n                    clusters\n                    keys {\n                        link\n                        hash\n                    }\n                }\n            }\n            node(id: $id) {\n                ... on Cluster {\n                    id\n                    group\n                    link\n                    availableActions {\n                        keyHash\n                        type\n                        requiredKeys\n                        allowedTags\n                    }\n                }\n            }\n        }\n    }\n"], ["\n    query clusterGetConfigurationQuery($id: ID!, $authorization: [String!]) {\n        secretgraph(authorization: $authorization) {\n            config {\n                id\n                hashAlgorithms\n                registerUrl\n                injectedClusters {\n                    group\n                    clusters\n                    keys {\n                        link\n                        hash\n                    }\n                }\n            }\n            node(id: $id) {\n                ... on Cluster {\n                    id\n                    group\n                    link\n                    availableActions {\n                        keyHash\n                        type\n                        requiredKeys\n                        allowedTags\n                    }\n                }\n            }\n        }\n    }\n"
    // has also description
])));
// has also description
exports.getClusterQuery = client_1.gql(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    query clusterGetClusterQuery($id: ID!, $authorization: [String!]) {\n        secretgraph(authorization: $authorization) {\n            config {\n                id\n                hashAlgorithms\n                injectedClusters {\n                    group\n                    clusters\n                    keys {\n                        link\n                        hash\n                    }\n                }\n            }\n            node(id: $id) {\n                ... on Cluster {\n                    id\n                    deleted\n                    group\n                    link\n                    description\n                    updateId\n                    availableActions {\n                        keyHash\n                        type\n                        requiredKeys\n                        allowedTags\n                    }\n                }\n            }\n        }\n    }\n"], ["\n    query clusterGetClusterQuery($id: ID!, $authorization: [String!]) {\n        secretgraph(authorization: $authorization) {\n            config {\n                id\n                hashAlgorithms\n                injectedClusters {\n                    group\n                    clusters\n                    keys {\n                        link\n                        hash\n                    }\n                }\n            }\n            node(id: $id) {\n                ... on Cluster {\n                    id\n                    deleted\n                    group\n                    link\n                    description\n                    updateId\n                    availableActions {\n                        keyHash\n                        type\n                        requiredKeys\n                        allowedTags\n                    }\n                }\n            }\n        }\n    }\n"])));
exports.createClusterMutation = client_1.gql(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    mutation clusterCreateMutation(\n        $description: String\n        $actions: [ActionInput!]\n        $publicKey: Upload!\n        $privateKey: Upload\n        $privateTags: [String!]!\n        $nonce: String\n        $authorization: [String!]\n    ) {\n        updateOrCreateCluster(\n            input: {\n                cluster: {\n                    description: $description\n                    actions: $actions\n                    key: {\n                        publicKey: $publicKey\n                        publicTags: [\"state=public\"]\n                        privateKey: $privateKey\n                        privateTags: $privateTags\n                        nonce: $nonce\n                    }\n                }\n                authorization: $authorization\n            }\n        ) {\n            cluster {\n                id\n                group\n                link\n                description\n                updateId\n                availableActions {\n                    keyHash\n                    type\n                    requiredKeys\n                    allowedTags\n                }\n            }\n            writeok\n        }\n    }\n"], ["\n    mutation clusterCreateMutation(\n        $description: String\n        $actions: [ActionInput!]\n        $publicKey: Upload!\n        $privateKey: Upload\n        $privateTags: [String!]!\n        $nonce: String\n        $authorization: [String!]\n    ) {\n        updateOrCreateCluster(\n            input: {\n                cluster: {\n                    description: $description\n                    actions: $actions\n                    key: {\n                        publicKey: $publicKey\n                        publicTags: [\"state=public\"]\n                        privateKey: $privateKey\n                        privateTags: $privateTags\n                        nonce: $nonce\n                    }\n                }\n                authorization: $authorization\n            }\n        ) {\n            cluster {\n                id\n                group\n                link\n                description\n                updateId\n                availableActions {\n                    keyHash\n                    type\n                    requiredKeys\n                    allowedTags\n                }\n            }\n            writeok\n        }\n    }\n"])));
exports.updateClusterMutation = client_1.gql(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    mutation clusterUpdateMutation(\n        $id: ID!\n        $updateId: ID!\n        $description: String\n        $actions: [ActionInput!]\n        $authorization: [String!]\n    ) {\n        updateOrCreateCluster(\n            input: {\n                id: $id\n                updateId: $updateId\n                cluster: { description: $description, actions: $actions }\n                authorization: $authorization\n            }\n        ) {\n            cluster {\n                id\n                group\n                link\n                description\n                updateId\n                availableActions {\n                    keyHash\n                    type\n                    requiredKeys\n                    allowedTags\n                }\n            }\n            writeok\n        }\n    }\n"], ["\n    mutation clusterUpdateMutation(\n        $id: ID!\n        $updateId: ID!\n        $description: String\n        $actions: [ActionInput!]\n        $authorization: [String!]\n    ) {\n        updateOrCreateCluster(\n            input: {\n                id: $id\n                updateId: $updateId\n                cluster: { description: $description, actions: $actions }\n                authorization: $authorization\n            }\n        ) {\n            cluster {\n                id\n                group\n                link\n                description\n                updateId\n                availableActions {\n                    keyHash\n                    type\n                    requiredKeys\n                    allowedTags\n                }\n            }\n            writeok\n        }\n    }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=cluster.js.map